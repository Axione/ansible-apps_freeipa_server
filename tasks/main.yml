---
- name: "Ensure valid hostname"
  hostname:
    name: "{{ ansible_fqdn }}"

- name: "Ensure hostname resolve to ip and not localhost"
  replace:
    path: /etc/hosts
    regexp: '^127.0.0.1     {{ ansible_fqdn }}'
    replace: '{{ ansible_default_ipv4.address }}\t{{ ansible_fqdn }}'

#- name: "Ensure hostname resolve to ip and not localhost"
#  lineinfile:
#    dest: /etc/hosts
#    line: "{{ ansible_default_ipv4.address }}\t{{ ansible_fqdn }}"
#    insertbefore: '^127.0.0.1'

- name: "Ensure ipv6 is not disable"
  sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes

- name: "Install rng-tools for better entropie"
  dnf:
    name: rng-tools
    state: present

- name: "Enable and start rng-tools"
  systemd:
    name: rngd
    enabled: yes
    state: started

- name: "Install required packages"
  dnf:
    name: ['@idm:DL1', 'freeipa-server', 'firewalld']
    state: present
  register: freeipa_install

- name: "Open firewall ports"
  firewalld:
    service: "{{ item }}"
    permanent: yes
    state: enabled
  ignore_errors: yes
  notify: reload firewalld
  with_items:
    - http
    - https
    - dns
    - ntp
    - freeipa-ldap
    - freeipa-ldaps
    - kerberos

- name: "Change Umask to 0022 to make installer working"
  shell: umask 0022 && umask
  when:
    - freeipa_install.changed
  notify: restart ipa services

- name: "MASTER - Configure FreeIPA server (take a while )"
  args:
    creates: /etc/ipa/default.conf
  command: "{{ freeipa_launch_command }} {{ freeipa_server_install_options | join(' ') }}"
  when:
    - freeipa_server_type == 'master'
    - freeipa_install.changed
  notify: restart ipa services

- name: "REPLICA 1/3 - Install ipa client"
  command: "ipa-client-install -U {{ freeipa_client_install_options | join(' ') }}"
  ignore_errors: yes
  when:
    - freeipa_server_type == 'replica'
    - freeipa_install.changed

- name: "REPLICA 2/3 - add to ipservers group"
  command: "ipa hostgroup-add-member ipaservers --hosts {{ ansible_fqdn }}"
  delegate_to: "{{ freeipa_server_master_fqdn }}"
  ignore_errors: yes
  when:
    - freeipa_server_type == 'replica'
    - freeipa_install.changed

- name: "REPLICA 3/3 - Install replica (take a while)"
  command: "{{ freeipa_launch_command }} {{ freeipa_replica_install_options | join(' ') }}"
  when:
    - freeipa_server_type == 'replica'
    - freeipa_install.changed

- name: "Global - Ensure admin config / auth to Kerberos realm"
  shell: |
    set -o pipefail
    echo '{{ freeipa_server_admin_password }}' | kinit admin
  changed_when: false
